@charset "UTF-8";
@import 'https://file.myfontastic.com/DNZuRqZzDWCAfLwPV36W5E/icons.css';
@import 'https://fonts.googleapis.com/css?family=Open+Sans:300,400,700';
@import 'https://fonts.googleapis.com/css?family=Oswald:300,400,700';
@import 'https://file.myfontastic.com/DNZuRqZzDWCAfLwPV36W5E/icons.css';
@import 'https://fonts.googleapis.com/css?family=Open+Sans:300,400,700';
@import 'https://fonts.googleapis.com/css?family=Oswald:300,400,700';
.slidesjs-pagination, .main-menu {
  list-style: none;
  padding-left: 0;
  margin: 0; }

/**
  EDgrid es una librer√≠a CSS para construir layouts con Responsive Web Design
  Importe este archivo en su proyecto para empezar a usarlo
**/
*,
*:before,
*:after {
  box-sizing: border-box; }

body {
  margin: 0;
  font-family: sans-serif; }

img {
  max-width: 100%;
  height: auto; }

a {
  text-decoration: none; }
  a:hover {
    text-decoration: none; }

.container {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  width: 100%; }

.item, .slides {
  margin: 0;
  padding-left: 1em;
  padding-right: 1em; }

.item {
  width: 100%; }
  .item.container {
    padding-left: 0;
    padding-right: 0; }

.fancybox-wrap {
  position: absolute !important;
  z-index: 1100 !important; }

.fancybox-overlay {
  background: rgba(0, 0, 0, 0.75);
  z-index: 1000; }

.slides {
  width: 100%;
  display: none;
  position: relative;
  z-index: 1; }
  .slides a:hover {
    text-decoration: none; }
  .slides img {
    display: block;
    width: 100%;
    height: auto; }

.slidesjs-navigation {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  height: 50px;
  width: 50px;
  line-height: 50px;
  text-align: center;
  background: rgba(0, 0, 0, 0.5);
  color: #fff;
  font-size: 1.5em;
  border-radius: 50%;
  text-shadow: 2px 2px #070D12, 1px 1px #070D12, 2px 2px #070D12;
  opacity: .5;
  transition: all 0.3s;
  z-index: 2000; }
  .slidesjs-navigation:hover {
    opacity: 1; }
  .slidesjs-navigation::before {
    position: relative;
    top: 3px !important; }

.slidesjs-previous {
  left: 1em; }
  .slidesjs-previous::before {
    left: -3px; }

.slidesjs-next {
  right: 1em; }
  .slidesjs-next::before {
    left: 2px; }

.slidesjs-pagination {
  position: absolute;
  z-index: 1000;
  bottom: 1em;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  right: 2em; }
  .slidesjs-pagination a {
    margin: 0 .5em;
    color: #FFFFFF;
    text-shadow: 2px 2px rgba(0, 0, 0, 0.5), 1px 1px rgba(0, 0, 0, 0.5); }
    .slidesjs-pagination a::before {
      position: relative;
      top: 0 !important; }
  @media screen and (max-width: 639px) {
    .slidesjs-pagination {
      -webkit-transform: scale(0.8);
      -ms-transform: scale(0.8);
      transform: scale(0.8); } }

body {
  background: #FDFDFD;
  font-family: "Open Sans", sans-serif;
  color: #444;
  height: 100vh;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }

a {
  color: inherit;
  text-decoration: none; }

p, blockquote, li {
  font-size: 1em;
  line-height: 1.5; }

p {
  margin: 0 0 1em 0; }
  p:last-child, p:only-child {
    margin: 0; }

h1, h2, h3, h4, h5, h6 {
  font-family: "Oswald", sans-serif;
  font-weight: 700;
  text-transform: normal;
  color: #2b2b2b;
  background: #FDFDFD;
  margin: 0;
  width: 100%;
  text-align: center;
  margin-bottom: 1em; }

h1 {
  font-size: 2em;
  line-height: 1.2; }

h2 {
  font-size: 1.6em; }

h3 {
  font-size: 1.3em; }

h4 {
  font-size: 1em; }

h5 {
  font-size: 0.9em; }

h6 {
  font-size: 0.8em; }

section {
  position: relative;
  z-index: -1; }
  @media screen and (max-width: 1023px) {
    section {
      left: 160px; } }
  @media screen and (min-width: 1024px) {
    section {
      padding-left: 160px; } }

.main-header {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 160px;
  background: #1C262B;
  height: 100vh;
  overflow-y: auto;
  position: fixed;
  z-index: 200; }

.top {
  height: 160px;
  background: radial-gradient(#777 20%, #222); }
  .top__title {
    position: fixed;
    background: #2BA163;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    height: 2em;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    color: rgba(253, 253, 253, 0.8);
    text-transform: uppercase; }
    @media screen and (max-width: 1023px) {
      .top__title {
        top: 0;
        left: 0;
        width: 100vw;
        height: 3em;
        background: #070D12;
        border-bottom: 1px solid rgba(253, 253, 253, 0.3);
        transition: all 0.3s; }
        .top__title.active {
          left: 160px; } }
    @media screen and (min-width: 1024px) {
      .top__title {
        top: calc(150px - 1em);
        left: 0;
        width: 160px;
        z-index: 250; } }
    .top__title h1 {
      font-size: .8em;
      margin: 0;
      background: none;
      text-align: left;
      color: inherit; }
      @media screen and (max-width: 1023px) {
        .top__title h1 {
          font-size: 1em;
          padding-left: 1em; } }
      @media screen and (min-width: 1024px) {
        .top__title h1 {
          text-align: center; } }
    .top__title a {
      color: inherit;
      border-right: 1px solid rgba(253, 253, 253, 0.3);
      height: 3rem;
      width: 3.5rem;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-justify-content: center;
      -ms-flex-pack: center;
      justify-content: center;
      -webkit-align-items: center;
      -ms-flex-align: center;
      align-items: center;
      font-size: 1.3em; }
      @media screen and (min-width: 1024px) {
        .top__title a {
          display: none; } }
      .top__title a::before {
        top: 1px; }

.main-nav {
  -webkit-flex: 2;
  -ms-flex: 2;
  flex: 2; }
  @media screen and (landscape) and (max-height: s) {
    .main-nav {
      -webkit-flex: 1;
      -ms-flex: 1;
      flex: 1; } }

.main-menu {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }
  .main-menu li {
    -webkit-flex: 2;
    -ms-flex: 2;
    flex: 2;
    height: 85px;
    border-bottom: 1px solid rgba(253, 253, 253, 0.1); }
    @media screen and (max-width: 1023px) {
      .main-menu li {
        height: 70px; } }
  .main-menu a {
    color: rgba(253, 253, 253, 0.4);
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    height: 100%;
    font-size: .7em;
    text-transform: uppercase;
    transition: all 0.3s; }
    .main-menu a:hover, .main-menu a.selected {
      color: rgba(253, 253, 253, 0.8); }
  .main-menu span {
    font-size: 2em; }

.bottom {
  margin-bottom: .5em; }
  .bottom p {
    color: rgba(253, 253, 253, 0.4);
    text-align: center;
    font-size: .7em; }
  .bottom span {
    margin-left: 3px; }

.home {
  height: 100vh;
  width: 100%;
  background: url(../img/bg.jpg) center/cover no-repeat;
  position: relative; }
  .home::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: rgba(102, 102, 102, 0.5); }

[class^="icon-"]::before {
  position: relative;
  top: 3px; }

body {
  overflow-x: hidden;
  position: relative;
  width: 100vw;
  height: 100vh; }
  @media screen and (max-width: 1023px) {
    body {
      left: -160px;
      transition: all 0.3s; } }
  body.active {
    left: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy5jc3MiLCJjb25maWcvX2ZvbnRzLnNjc3MiLCJmdW5jdGlvbnMvX3BsYWNlaG9sZGVycy5zY3NzIiwibGF5b3V0L19lZC1ncmlkLnNjc3MiLCJsYXlvdXQvY29tcG9uZW50cy9fYmFzZS5zY3NzIiwibGF5b3V0L2NvbXBvbmVudHMvX2NvcmUuc2NzcyIsImNvbmZpZy9fdmFyaWFibGVzLnNjc3MiLCJ1aS9jb21wb25lbnRzL19tb2RhbC5zY3NzIiwidWkvY29tcG9uZW50cy9fc2xpZGVzLnNjc3MiLCJmdW5jdGlvbnMvX2Z1bmN0aW9ucy5zY3NzIiwibGF5b3V0L2NvbXBvbmVudHMvX21lZGlhLXF1ZXJpZXMuc2NzcyIsImJhc2UvX2Jhc2Uuc2NzcyIsImNvbmZpZy9fY29sb3JzLnNjc3MiLCJ0aGVtZS9faGVhZGVyLnNjc3MiLCJ0aGVtZS9ob21lLnNjc3MiLCJtb2R1bGVzL19tb2R1bGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDQ2pCLHdFQUFPO0FBR1Asd0VBQU87QUFHUCxxRUFBTztBQU5QLHdFQUFPO0FBR1Asd0VBQU87QUFHUCxxRUFBTztBQ1BQO0VBQ0UsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixVQUFVLEVBQ1g7O0FDSkQ7OztHQUdHO0FDRkg7OztFQUdFLHVCQUF1QixFQUN4Qjs7QUFFRDtFQUNFLFVBQWdCO0VBQ2hCLHdCQUF5QixFQUMxQjs7QUFHRDtFQUNFLGdCQUFpQjtFQUNqQixhQUFpQixFQUNsQjs7QUFFRDtFQUNFLHNCQUF1QixFQUd4QjtFQUpEO0lBR1ksc0JBQXdCLEVBQUU7O0FDcEJ0QztFQUNFLHNCQUFvQjtFQUFwQixxQkFBb0I7RUFBcEIsY0FBb0I7RUFDcEIsd0JBQW9CO0VBQXBCLG9CQUFvQjtFQUFwQixnQkFBb0I7RUFDcEIsa0JGZW1CO0VFZG5CLGtCQUFvQjtFQUNwQixtQkFBb0I7RUFDcEIsWUFBb0IsRUFDckI7O0FBR0Q7RUFDRSxVQUFrQjtFQUNsQixrQkNB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O0lhbktFLGdDQUF3QjtJQUN4QixzQkFBYTtJQUFiLHFCQUFhO0lBQWIsY0FBYTtJQUNiLCtCQUFhO0lBQWIsMkJBQWE7SUFBYix1QkFBYTtJQUNiLGdDQUFnQjtJQUFoQixzQkFBZ0I7SUFBaEIsd0JBQWdCO0lBQ2hCLDRCQUFnQjtJQUFoQix1QkFBZ0I7SUFBaEIsb0JBQWdCO0lBQ2hCLGFQbEdTO0lPNkViLGdCQVlHO0liK0tDLDBCWWhSVztJQ3FGZixxQkEwQk0sRUFBQTtJQUNGO01ibUtFLGdDQUFnQyxFQUFFO0VhaEt4QztJQUNFLGVBQWUsRUFBSzs7QWJtS3RCO0VBQ0Usb0JhaktxQixFQUFBO0Via0tyQjtJYXRLRixnQ0FPTztJQUNILG1CQUNEO0liZ0tDLGdCQUFnQixFQUFFO0VjaFN0QjtJQUNFLGlCQUFjLEVBQUE7O0FkbVNoQjtFY2hTRSxjQUFVO0VBSlosWUFLVTtFZGtTUixzRGNqU2M7RWRrU2QsbUJjalNZLEVBQVM7RWRrU3JCO0ljaFNFLFlBQWE7SUFDYixtQkFBaUI7SWRrU2pCLFlBQVk7SWU1U2hCLGFBQWdCO0lBQ2QscUNBQW1CLEVBQUE7O0FmK1NyQjtFZTVTQSxtQkFBSTtFQUVGLFNBQUEsRUFBVTs7QWY4U1o7RWUzU0UsbUJBUUQ7RUw4Q0ssbUJBQVk7RVZ3UGhCLGFlblRFO0Vmb1RGLGNlN1NRLEVBQWE7RWY4U3JCO0llclRGO01BV0ksYUFDRDtNZjRTRyxxQkFBcUIsRUFBRSxFQUFFO0VBQzdCO0lBQ0UsUUFBUSxFQUFFIiwiZmlsZSI6InN0eWxlcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG5AaW1wb3J0ICdodHRwczovL2ZpbGUubXlmb250YXN0aWMuY29tL0ROWnVScVp6RFdDQWZMd1BWMzZXNUUvaWNvbnMuY3NzJztcbkBpbXBvcnQgJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnM6MzAwLDQwMCw3MDAnO1xuQGltcG9ydCAnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9zd2FsZDozMDAsNDAwLDcwMCc7XG5AaW1wb3J0ICdodHRwczovL2ZpbGUubXlmb250YXN0aWMuY29tL0ROWnVScVp6RFdDQWZMd1BWMzZXNUUvaWNvbnMuY3NzJztcbkBpbXBvcnQgJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnM6MzAwLDQwMCw3MDAnO1xuQGltcG9ydCAnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9zd2FsZDozMDAsNDAwLDcwMCc7XG4uc2xpZGVzanMtcGFnaW5hdGlvbiwgLm1haW4tbWVudSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxyXG4gIEVEZ3JpZCBlcyB1bmEgbGlicmVyw61hIENTUyBwYXJhIGNvbnN0cnVpciBsYXlvdXRzIGNvbiBSZXNwb25zaXZlIFdlYiBEZXNpZ25cclxuICBJbXBvcnRlIGVzdGUgYXJjaGl2byBlbiBzdSBwcm95ZWN0byBwYXJhIGVtcGV6YXIgYSB1c2FybG9cclxuKiovXG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgfVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bzsgfVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIGE6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgd2lkdGg6IDEwMCU7IH1cblxuLml0ZW0sIC5zbGlkZXMge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmctbGVmdDogMWVtO1xuICBwYWRkaW5nLXJpZ2h0OiAxZW07IH1cblxuLml0ZW0ge1xuICB3aWR0aDogMTAwJTsgfVxuICAuaXRlbS5jb250YWluZXIge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG5cbi5mYW5jeWJveC13cmFwIHtcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gIHotaW5kZXg6IDExMDAgIWltcG9ydGFudDsgfVxuXG4uZmFuY3lib3gtb3ZlcmxheSB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC43NSk7XG4gIHotaW5kZXg6IDEwMDA7IH1cblxuLnNsaWRlcyB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7IH1cbiAgLnNsaWRlcyBhOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgLnNsaWRlcyBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bzsgfVxuXG4uc2xpZGVzanMtbmF2aWdhdGlvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgaGVpZ2h0OiA1MHB4O1xuICB3aWR0aDogNTBweDtcbiAgbGluZS1oZWlnaHQ6IDUwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAxLjVlbTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB0ZXh0LXNoYWRvdzogMnB4IDJweCAjMDcwRDEyLFxyIDFweCAxcHggIzA3MEQxMixcciAycHggMnB4ICMwNzBEMTI7XG4gIG9wYWNpdHk6IC41O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgei1pbmRleDogMjAwMDsgfVxuICAuc2xpZGVzanMtbmF2aWdhdGlvbjpob3ZlciB7XG4gICAgb3BhY2l0eTogMTsgfVxuICAuc2xpZGVzanMtbmF2aWdhdGlvbjo6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAzcHggIWltcG9ydGFudDsgfVxuXG4uc2xpZGVzanMtcHJldmlvdXMge1xuICBsZWZ0OiAxZW07IH1cbiAgLnNsaWRlc2pzLXByZXZpb3VzOjpiZWZvcmUge1xuICAgIGxlZnQ6IC0zcHg7IH1cblxuLnNsaWRlc2pzLW5leHQge1xuICByaWdodDogMWVtOyB9XG4gIC5zbGlkZXNqcy1uZXh0OjpiZWZvcmUge1xuICAgIGxlZnQ6IDJweDsgfVxuXG4uc2xpZGVzanMtcGFnaW5hdGlvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTAwMDtcbiAgYm90dG9tOiAxZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHJpZ2h0OiAyZW07IH1cbiAgLnNsaWRlc2pzLXBhZ2luYXRpb24gYSB7XG4gICAgbWFyZ2luOiAwIC41ZW07XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gICAgdGV4dC1zaGFkb3c6IDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjUpLFxyIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjUpOyB9XG4gICAgLnNsaWRlc2pzLXBhZ2luYXRpb24gYTo6YmVmb3JlIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHRvcDogMCAhaW1wb3J0YW50OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYzOXB4KSB7XG4gICAgLnNsaWRlc2pzLXBhZ2luYXRpb24ge1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjgpOyB9IH1cblxuYm9keSB7XG4gIGJhY2tncm91bmQ6ICNGREZERkQ7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzQ0NDtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG5hIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5wLCBibG9ja3F1b3RlLCBsaSB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBsaW5lLWhlaWdodDogMS41OyB9XG5cbnAge1xuICBtYXJnaW46IDAgMCAxZW0gMDsgfVxuICBwOmxhc3QtY2hpbGQsIHA6b25seS1jaGlsZCB7XG4gICAgbWFyZ2luOiAwOyB9XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBmb250LWZhbWlseTogXCJPc3dhbGRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vcm1hbDtcbiAgY29sb3I6ICMyYjJiMmI7XG4gIGJhY2tncm91bmQ6ICNGREZERkQ7XG4gIG1hcmdpbjogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMWVtOyB9XG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI7IH1cblxuaDIge1xuICBmb250LXNpemU6IDEuNmVtOyB9XG5cbmgzIHtcbiAgZm9udC1zaXplOiAxLjNlbTsgfVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbmg1IHtcbiAgZm9udC1zaXplOiAwLjllbTsgfVxuXG5oNiB7XG4gIGZvbnQtc2l6ZTogMC44ZW07IH1cblxuc2VjdGlvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogLTE7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgc2VjdGlvbiB7XG4gICAgICBsZWZ0OiAxNjBweDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIHNlY3Rpb24ge1xuICAgICAgcGFkZGluZy1sZWZ0OiAxNjBweDsgfSB9XG5cbi5tYWluLWhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiAxNjBweDtcbiAgYmFja2dyb3VuZDogIzFDMjYyQjtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAyMDA7IH1cblxuLnRvcCB7XG4gIGhlaWdodDogMTYwcHg7XG4gIGJhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudCgjNzc3IDIwJSwgIzIyMik7IH1cbiAgLnRvcF9fdGl0bGUge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBiYWNrZ3JvdW5kOiAjMkJBMTYzO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgaGVpZ2h0OiAyZW07XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBjb2xvcjogcmdiYSgyNTMsIDI1MywgMjUzLCAwLjgpO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICAgIC50b3BfX3RpdGxlIHtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB3aWR0aDogMTAwdnc7XG4gICAgICAgIGhlaWdodDogM2VtO1xuICAgICAgICBiYWNrZ3JvdW5kOiAjMDcwRDEyO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTMsIDI1MywgMjUzLCAwLjMpO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuICAgICAgICAudG9wX190aXRsZS5hY3RpdmUge1xuICAgICAgICAgIGxlZnQ6IDE2MHB4OyB9IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC50b3BfX3RpdGxlIHtcbiAgICAgICAgdG9wOiBjYWxjKDE1MHB4IC0gMWVtKTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IDE2MHB4O1xuICAgICAgICB6LWluZGV4OiAyNTA7IH0gfVxuICAgIC50b3BfX3RpdGxlIGgxIHtcbiAgICAgIGZvbnQtc2l6ZTogLjhlbTtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgY29sb3I6IGluaGVyaXQ7IH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgICAgICAudG9wX190aXRsZSBoMSB7XG4gICAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAxZW07IH0gfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC50b3BfX3RpdGxlIGgxIHtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuICAgIC50b3BfX3RpdGxlIGEge1xuICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2JhKDI1MywgMjUzLCAyNTMsIDAuMyk7XG4gICAgICBoZWlnaHQ6IDNyZW07XG4gICAgICB3aWR0aDogMy41cmVtO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGZvbnQtc2l6ZTogMS4zZW07IH1cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAudG9wX190aXRsZSBhIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgICAgIC50b3BfX3RpdGxlIGE6OmJlZm9yZSB7XG4gICAgICAgIHRvcDogMXB4OyB9XG5cbi5tYWluLW5hdiB7XG4gIGZsZXg6IDI7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKGxhbmRzY2FwZSkgYW5kIChtYXgtaGVpZ2h0OiBzKSB7XG4gICAgLm1haW4tbmF2IHtcbiAgICAgIGZsZXg6IDE7IH0gfVxuXG4ubWFpbi1tZW51IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuICAubWFpbi1tZW51IGxpIHtcbiAgICBmbGV4OiAyO1xuICAgIGhlaWdodDogODVweDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTMsIDI1MywgMjUzLCAwLjEpOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gICAgICAubWFpbi1tZW51IGxpIHtcbiAgICAgICAgaGVpZ2h0OiA3MHB4OyB9IH1cbiAgLm1haW4tbWVudSBhIHtcbiAgICBjb2xvcjogcmdiYSgyNTMsIDI1MywgMjUzLCAwLjQpO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBmb250LXNpemU6IC43ZW07XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuICAgIC5tYWluLW1lbnUgYTpob3ZlciwgLm1haW4tbWVudSBhLnNlbGVjdGVkIHtcbiAgICAgIGNvbG9yOiByZ2JhKDI1MywgMjUzLCAyNTMsIDAuOCk7IH1cbiAgLm1haW4tbWVudSBzcGFuIHtcbiAgICBmb250LXNpemU6IDJlbTsgfVxuXG4uYm90dG9tIHtcbiAgbWFyZ2luLWJvdHRvbTogLjVlbTsgfVxuICAuYm90dG9tIHAge1xuICAgIGNvbG9yOiByZ2JhKDI1MywgMjUzLCAyNTMsIDAuNCk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogLjdlbTsgfVxuICAuYm90dG9tIHNwYW4ge1xuICAgIG1hcmdpbi1sZWZ0OiAzcHg7IH1cblxuLmhvbWUge1xuICBoZWlnaHQ6IDEwMHZoO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9iZy5qcGcpIGNlbnRlci9jb3ZlciBuby1yZXBlYXQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaG9tZTo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogcmdiYSgxMDIsIDEwMiwgMTAyLCAwLjUpOyB9XG5cbltjbGFzc149XCJpY29uLVwiXTo6YmVmb3JlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDNweDsgfVxuXG5ib2R5IHtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgICBib2R5IHtcbiAgICAgIGxlZnQ6IC0xNjBweDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzOyB9IH1cbiAgYm9keS5hY3RpdmUge1xuICAgIGxlZnQ6IDA7IH1cbiIsIi8vIGljb24tZm9udHNcbkBpbXBvcnQgJ2h0dHBzOi8vZmlsZS5teWZvbnRhc3RpYy5jb20vRE5adVJxWnpEV0NBZkx3UFYzNlc1RS9pY29ucy5jc3MnO1xuXG4vL1RpcG8gZGUgZnVlbnRlcyBnZW5lcmFsZXMgKiogZGVzYWN0aXZlIGxhcyBxdWUgbm8gIG5lY2VzaXRlIHBhcmEgbWF5b3IgZGVuZGltaWVudG9cbkBpbXBvcnQgJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnM6MzAwLDQwMCw3MDAnO1xuJG9wZW4tc2FuczonT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcbi8vLy9cbkBpbXBvcnQgJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Pc3dhbGQ6MzAwLDQwMCw3MDAnO1xuJG9zd2FsZCA6ICdPc3dhbGQnLCBzYW5zLXNlcmlmO1xuLy9cbi8vQGltcG9ydCAnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU1vbnRzZXJyYXQ6NDAwLDcwMCc7XG4vLyRtb250c2VycmF0IDogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xuLy9cbi8vQGltcG9ydCAnaHR0cDovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9TnVuaXRvOjQwMCwzMDAsNzAwLDgwMCc7XG4vLyRudW5pdG8gOiAnTnVuaXRvJywgYXJpYWw7XG5cbi8vQGltcG9ydCAnaHR0cDovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9VGl0aWxsaXVtK1dlYjo0MDAsNzAwaXRhbGljLDcwMCw2MDBpdGFsaWMsNDAwaXRhbGljJztcbi8vJHRpdGlsbGl1bTogJ1RpdGlsbGl1bScsIGFyaWFsO1xuXG5cbi8vQGltcG9ydCAnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9yYml0cm9uOjQwMCw1MDAsNzAwLDkwMCc7XG4vLyRvcmJpdHJvbjogJ09yYml0cm9uJywgYXJpYWw7XG4vL1xuLy9AaW1wb3J0ICdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Um9ib3RvK0NvbmRlbnNlZDozMDAsNDAwLDcwMCc7XG4vLyRyb2JvdG8tY29uZGVuc2VkIDogJ1JvYm90byBDb25kZW5zZWQnLCBzYW5zLXNlcmlmO1xuLy9cbi8vQGltcG9ydCAnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVVidW50dTozMDAsNDAwLDcwMCc7XG4vLyR1YnVudHUgOiAnVWJ1bnR1Jywgc2Fucy1zZXJpZjtcbi8vXG4vL0BpbXBvcnQgJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Ob3RvK1NhbnM6NDAwLDcwMCc7XG4vLyRub3RvIDogJ05vdG8gU2FucycsIHNhbnMtc2VyaWY7XG5cbi8vQGltcG9ydCAnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVVidW50dStDb25kZW5zZWQnO1xuLy8kdWJ1bnR1LWNvbmRlbnNlZDogJ1VidW50dSBDb25kZW5zZWQnLCBzYW5zLXNlcmlmO1xuXG4vL0BpbXBvcnQgJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Kb3NlZmluK1NhbnM6NDAwLDcwMCc7XG4vLyRqb3NlZmluLXNhbnM6ICdKb3NlZmluIFNhbnMnLCBzYW5zLXNlcmlmO1xuLy9cbi8vQGltcG9ydCAnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVZhcmVsYStSb3VuZCc7XG4vLyR2YXJlbGE6ICdWYXJlbGEgUm91bmQnLCBzYW5zLXNlcmlmO1xuXG4kbWFpbi1mb250ICAgOiAkb3Blbi1zYW5zO1xuLy8kc2Vjb25kLWZvbnQ6ICR1YnVudHUtY29uZGVuc2VkO1xuJGhlYWRlci1mb250IDogJG9zd2FsZDtcblxuJGxpZ2h0ICAgICAgOiAzMDA7XG4kbm9ybWFsICAgICA6IDQwMDtcbiRib2xkICAgICAgIDogNzAwO1xuXG4vL0Bmb250LWZhY2Uge1xuLy8gIGZvbnQtZmFtaWx5OiAnRm9udEF3ZXNvbWUnO1xuLy8gIHNyYzogdXJsKCcuLi9mb250cy9mb250YXdlc29tZS13ZWJmb250LmVvdD92PTQuNi4zJyk7XG4vLyAgc3JjOiB1cmwoJy4uL2ZvbnRzL2ZvbnRhd2Vzb21lLXdlYmZvbnQuZW90PyNpZWZpeCZ2PTQuNi4zJykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCB1cmwoJy4uL2ZvbnRzL2ZvbnRhd2Vzb21lLXdlYmZvbnQud29mZjI/dj00LjYuMycpIGZvcm1hdCgnd29mZjInKSwgdXJsKCcuLi9mb250cy9mb250YXdlc29tZS13ZWJmb250LndvZmY/dj00LjYuMycpIGZvcm1hdCgnd29mZicpLCB1cmwoJy4uL2ZvbnRzL2ZvbnRhd2Vzb21lLXdlYmZvbnQudHRmP3Y9NC42LjMnKSBmb3JtYXQoJ3RydWV0eXBlJyksIHVybCgnLi4vZm9udHMvZm9udGF3ZXNvbWUtd2ViZm9udC5zdmc/dj00LjYuMyNmb250YXdlc29tZXJlZ3VsYXInKSBmb3JtYXQoJ3N2ZycpO1xuLy8gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4vLyAgZm9udC1zdHlsZTogbm9ybWFsO1xuLy99XG4vLy5mYSB7XG4vLyAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuLy8gIGZvbnQ6IG5vcm1hbCBub3JtYWwgbm9ybWFsIDE0cHgvMSBGb250QXdlc29tZTtcbi8vICBmb250LXNpemU6IGluaGVyaXQ7XG4vLyAgdGV4dC1yZW5kZXJpbmc6IGF1dG87XG4vLyAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4vLyAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbi8vfVxuLy8uZmEtc3BpbiB7XG4vLyAgLXdlYmtpdC1hbmltYXRpb246IGZhLXNwaW4gMnMgaW5maW5pdGUgbGluZWFyO1xuLy8gIGFuaW1hdGlvbjogZmEtc3BpbiAycyBpbmZpbml0ZSBsaW5lYXI7XG4vL31cbi8vLmZhLXB1bHNlIHtcbi8vICAtd2Via2l0LWFuaW1hdGlvbjogZmEtc3BpbiAxcyBpbmZpbml0ZSBzdGVwcyg4KTtcbi8vICBhbmltYXRpb246IGZhLXNwaW4gMXMgaW5maW5pdGUgc3RlcHMoOCk7XG4vL31cbi8vQC13ZWJraXQta2V5ZnJhbWVzIGZhLXNwaW4ge1xuLy8gIDAlIHtcbi8vICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4vLyAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbi8vICB9XG4vLyAgMTAwJSB7XG4vLyAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM1OWRlZyk7XG4vLyAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpO1xuLy8gIH1cbi8vfVxuLy9Aa2V5ZnJhbWVzIGZhLXNwaW4ge1xuLy8gIDAlIHtcbi8vICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4vLyAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbi8vICB9XG4vLyAgMTAwJSB7XG4vLyAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM1OWRlZyk7XG4vLyAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpO1xuLy8gIH1cbi8vfVxuLy8uZmEtc3Bpbm5lcjpiZWZvcmUge1xuLy8gIGNvbnRlbnQ6IFwiXFxmMTEwXCI7XG4vL31cbiIsIiVsaXN0LXN0eWxle1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIG1hcmdpbjogMDtcbn1cbiIsIi8qKlxyXG4gIEVEZ3JpZCBlcyB1bmEgbGlicmVyw61hIENTUyBwYXJhIGNvbnN0cnVpciBsYXlvdXRzIGNvbiBSZXNwb25zaXZlIFdlYiBEZXNpZ25cclxuICBJbXBvcnRlIGVzdGUgYXJjaGl2byBlbiBzdSBwcm95ZWN0byBwYXJhIGVtcGV6YXIgYSB1c2FybG9cclxuKiovXHJcblxyXG4vL0Z1bmNpb25lcyBwYXJhIGNvbnZlcnRpciBweCBhIGVtIHkgcmVtXHJcbkBpbXBvcnQgXCJjb21wb25lbnRzL2Z1bmN0aW9uc1wiO1xyXG5cclxuLy8gVmFyaWFibGVzIGdsb2JhbGVzIChwdWVkZSBzb2JyZWVzY3JpYmlybGFzIGFudGVzIGRlIGltcG9ydGFyIEVEIGdyaWQpXHJcbi8vIE5vIGxhcyBzb2JyZWVzY3JpYmEgYXF1w60sIHNpbm8gZGVzZGUgc3UgcHJveWVjdG8uXHJcbiAgJGNzc0NvcmUgICAgOiB0cnVlICAhZGVmYXVsdDtcclxuICAkY3NzSGVscGVycyA6IHRydWUgICFkZWZhdWx0O1xyXG4gICRkZXZNb2RlICAgIDogZmFsc2UgIWRlZmF1bHQ7XHJcblxyXG4vLyBTZWxlY3RvcmVzIChjbGFzZXMpIHBhcmEgZmxleC1jb250YWluZXIgeSBmbGV4LWl0ZW1cclxuICAkY29udGFpbmVyIDogZWQtY29udGFpbmVyICFkZWZhdWx0O1xyXG4gICRpdGVtICAgICAgOiBlZC1pdGVtICFkZWZhdWx0O1xyXG5cclxuLy8gQW5jaG8gbcOheGltbyBwYXJhIGxvcyBjb250ZW5lZG9yZXNcclxuICAkbWF4LXdpZHRoIDogMTIwMHB4ICFkZWZhdWx0O1xyXG5cclxuLy8gU2VwZXJhY2nDs24gaG9yaXpvbnRhbCBlbnRyZSBpdGVtcyAoKjIpXHJcbiAgJGd1dHRlciA6IGVtKDE1cHgpICFkZWZhdWx0O1xyXG5cclxuLy8gQnJlYWtwb2ludHNcclxuICAkYnJlYWtwb2ludHMgOiAoXHJcbiAgICBzICA6IDAsXHJcbiAgICBtICA6IDY0MHB4LFxyXG4gICAgbCAgOiAxMDI0cHgsXHJcbiAgICB4bCA6IDE0NDBweFxyXG4gICkgIWRlZmF1bHQ7XHJcblxyXG4vLyBGcmFjY2lvbmVzIHBhcmEgY2FsY3VsYXIgYW5jaG9zIGRlIGxvcyBpdGVtc1xyXG4gICRmcmFjdGlvbnMgOiAzIDYgIWRlZmF1bHQ7XHJcblxyXG4vLyBJbXBvcnRhciBjb21wb25lbnRlc1xyXG5AaW1wb3J0IFwiY29tcG9uZW50cy9iYXNlXCI7ICAgICAgICAgICAgLy8gZXN0aWxvcyBiYXNlXHJcbkBpbXBvcnQgXCJjb21wb25lbnRzL21lZGlhLXF1ZXJpZXNcIjsgICAvLyBtaXhpbnMgZnJvbSgpLCB0bygpLCBmcm9tVG8oKVxyXG5AaW1wb3J0IFwiY29tcG9uZW50cy9oZWxwZXJzXCI7ICAgICAgICAgLy8gdXRpbGlkYWRlc1xyXG5AaW1wb3J0IFwiY29tcG9uZW50cy9kZXZcIjsgICAgICAgICAgICAgLy8gbW9kbyBkZXZcclxuQGltcG9ydCBcImNvbXBvbmVudHMvY29yZVwiOyAgICAgICAgICAgIC8vIGNvcmUgZGUgRURncmlkIChjb250YWluZXJzIHkgaXRlbXMpXHJcbkBpbXBvcnQgXCJjb21wb25lbnRzL2dyaWRcIjsgICAgICAgICAgICAvLyBtaXhpbiBncmlkKClcclxuQGltcG9ydCBcImNvbXBvbmVudHMvdmlzaWJpbGl0eVwiOyAgICAgIC8vIG1peGlucyBwYXJhIHZpc2liaWxpZGFkXHJcbkBpbXBvcnQgXCJjb21wb25lbnRzL3ZpZGVvXCI7ICAgICAgICAgICAvLyB2aWRlbyBSV0RcclxuQGltcG9ydCBcImNvbXBvbmVudHMvZWQtbWVudVwiOyAgICAgICAgIC8vIGVzdGlsb3MgcGFyYSBtZW51c1xyXG5AaW1wb3J0IFwiY29tcG9uZW50cy9mbGV4Ym94XCI7ICAgICAgICAgLy8gdXRpbGlkYWRlcyBjb24gZmxleGJveFxyXG5AaW1wb3J0IFwiY29tcG9uZW50cy9vZmZzZXRcIjsgICAgICAgICAgLy8gb2Zmc2V0c1xyXG5AaW1wb3J0IFwiY29tcG9uZW50cy9idXR0b25zXCI7ICAgICAgICAgLy8gbWl4aW4gYnV0dG9uKClcclxuQGltcG9ydCBcImNvbXBvbmVudHMvY3NzLWNvcmVcIjsgICAgICAgIC8vIGNvbXBvbmVudGVzIHF1ZSBzZSBjb21waWxhcmFuIHBvciBkZWZhdWx0IGEgY3NzXHJcbkBpbXBvcnQgXCJjb21wb25lbnRzL2Nzcy1oZWxwZXJzXCI7ICAgICAvLyBheXVkYXMgZW4gY3NzIChwb3IgbWVkaW8gZGUgY2xhc2VzKVxyXG4iLCIvLyBSV0QgQmFzZXNcclxuKixcclxuKjpiZWZvcmUsXHJcbio6YWZ0ZXIge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gIG1hcmdpbiAgICAgIDogMDtcclxuICBmb250LWZhbWlseSA6IHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbi8vIEltw6FnZW5lcyByZXNwb25zaXZlXHJcbmltZyB7XHJcbiAgbWF4LXdpZHRoIDogMTAwJTtcclxuICBoZWlnaHQgICAgOiBhdXRvO1xyXG59XHJcblxyXG5hIHtcclxuICB0ZXh0LWRlY29yYXRpb24gOiBub25lO1xyXG5cclxuICAmOmhvdmVyIHsgdGV4dC1kZWNvcmF0aW9uIDogbm9uZSB9XHJcbn1cclxuIiwiLy8gcGxhY2Vob2xkZXIgcGFyYSBlZC1jb250YWluZXJcclxuJWVkLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheSAgICAgIDogZmxleDtcclxuICBmbGV4LXdyYXAgICAgOiB3cmFwO1xyXG4gIG1heC13aWR0aCAgICA6ICRtYXgtd2lkdGg7XHJcbiAgbWFyZ2luLWxlZnQgIDogYXV0bztcclxuICBtYXJnaW4tcmlnaHQgOiBhdXRvO1xyXG4gIHdpZHRoICAgICAgICA6IDEwMCU7XHJcbn1cclxuXHJcbi8vIHBsYWNlaG9sZGVyIHBhcmEgZWQtaXRlbVxyXG4lZWQtaXRlbSB7XHJcbiAgbWFyZ2luICAgICAgICA6IDA7XHJcbiAgcGFkZGluZy1sZWZ0ICA6ICRndXR0ZXI7XHJcbiAgcGFkZGluZy1yaWdodCA6ICRndXR0ZXI7XHJcbn1cclxuXHJcbi8vIG1peGluIHBhcmEgY3JlYXIgZWQtY29udGFpbmVyXHJcbkBtaXhpbiBlZENvbnRhaW5lciB7XHJcbiAgQGV4dGVuZCAlZWQtY29udGFpbmVyO1xyXG5cclxuICBAaWYgJGRldk1vZGUgPT0gdHJ1ZSB7XHJcbiAgICBAaW5jbHVkZSBkZXZNb2RlQ29udGFpbmVyKCk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBtaXhpbiBwYXJhIGVkLWNvbnRhaW5lciB0b3RhbFxyXG5AbWl4aW4gZnVsbCB7XHJcbiAgbWF4LXdpZHRoIDogMTAwJTtcclxufVxyXG5cclxuLy8gTWl4aW4gcGFyYSBjYWxjdWxhciBlbCBhbmNobyBkZSB1biBlZC1pdGVtXHJcbkBtaXhpbiBlZEl0ZW1XaWR0aCgkY3VycmVudEJwLCAkcHJldkJwLCAkY29yZUJwKXtcclxuICAvLyBTaSBlbCB0YW1hw7FvIGFjdHVhbCBlcyBkaWZlcmVudGUgYWwgcHJldmlvXHJcbiAgLy8gYXNpZ25hcsOhIGVsIGFuY2hvIGVuIHBvcmNlbnRhamVcclxuICBAaWYgJGN1cnJlbnRCcCAhPSAkcHJldkJwe1xyXG4gICAgQGlmICRjdXJyZW50QnAgPCAxIHtcclxuICAgICAgQGluY2x1ZGUgZnJvbSgkY29yZUJwKXtcclxuICAgICAgICB3aWR0aCA6ICRjdXJyZW50QnAgKiAxMDAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBAZWxzZSB7XHJcbiAgICAgIEBpbmNsdWRlIGZyb20oJGNvcmVCcCl7XHJcbiAgICAgICAgd2lkdGggOiAkY3VycmVudEJwICogMSU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIG1peGluIHBhcmEgY3JlYXIgdW4gZWQtaXRlbVxyXG5AbWl4aW4gZWRJdGVtKCRzOjEwMCwkbTokcywkbDokbSwkeGw6JGwpIHtcclxuICBAZXh0ZW5kICVlZC1pdGVtO1xyXG5cclxuICBAaWYgJGRldk1vZGUgPT0gdHJ1ZSB7XHJcbiAgICBAaW5jbHVkZSBkZXZNb2RlSXRlbSgpO1xyXG4gIH1cclxuXHJcbiAgLy8gY2FsY3VsYXIgZWwgYW5jaG8gcGFyYSBlbCBwcmltZXIgYnJlYWtwb2ludFxyXG4gIC8vIHBvciBkZWZlY3RvIGVzIDEwMCUgeSBzZSBjb252ZXJ0aXLDoSBhbCBwb3JjZW50YWplIGFkZWN1YWRvXHJcbiAgLy8gc2Vnw7puIGVsIHZhbG9yIHF1ZSBzZSBsZSBwYXNlXHJcbiAgQGlmICRzID09IDEwMCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9IEBlbHNlIGlmICRzIDwgMSB7XHJcbiAgICB3aWR0aCA6ICRzICogMTAwJTtcclxuICB9IEBlbHNlIHtcclxuICAgIHdpZHRoIDogJHMgKiAxJTtcclxuICB9XHJcblxyXG4gIC8vIHdpZHRocyBmb3Igb3RoZXJzIGJyZWFrcG9pbnRzXHJcbiAgLy8gYW5jaG9zIHBhcmEgbG9zIGRlbcOhcyBicmVha3BvaW50c1xyXG4gIEBpbmNsdWRlIGVkSXRlbVdpZHRoKCRtLCRzLG0pOyAvL21lZGl1bVxyXG4gIEBpbmNsdWRlIGVkSXRlbVdpZHRoKCRsLCRtLGwpOyAvL2xhcmdlXHJcbiAgQGluY2x1ZGUgZWRJdGVtV2lkdGgoJHhsLCRsLHhsKTsgLy94bGFyZ2VcclxufVxyXG5cclxuLy8gY3JlYXIgdW4gZWQtY29udGFpbmVyXHJcbi4jeyRjb250YWluZXJ9IHsgQGluY2x1ZGUgZWRDb250YWluZXIoKSB9XHJcblxyXG4vLyBjcmVhciB1biBlZC1pdGVtXHJcbi4jeyRpdGVtfSB7XHJcbiAgQGluY2x1ZGUgZWRJdGVtKCk7XHJcblxyXG4gIC8vIHVuIGVkLWl0ZW0gYSBsYSB2ZXogcHVlZGUgc2VyIGVkLWNvbnRhaW5lclxyXG4gIC8vIHBhcmEgZXZpdGFyIGFuaWRhY2lvbmVzIGlubmVjZXNhcmlhc1xyXG4gICYuI3skY29udGFpbmVyfXtcclxuICAgIHBhZGRpbmctbGVmdCA6IDA7XHJcbiAgICBwYWRkaW5nLXJpZ2h0IDogMDtcclxuICB9XHJcbn1cclxuXHJcbi8vIEJyZWFrcG9pbnRzXHJcbkBtaXhpbiBjb3JlR3JpZCgpe1xyXG4gIEBlYWNoICRzaXplLCAkc2NyZWVuLXNpemUgaW4gJGJyZWFrcG9pbnRze1xyXG4gICAgQGlmICRzaXplID09IHMge1xyXG4gICAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIDIwIHtcclxuICAgICAgICAucy0jeyRpKjV9LFxyXG4gICAgICAgIC4jeyRpdGVtfS5zLSN7JGkqNX0ge1xyXG4gICAgICAgICAgd2lkdGg6ICRpICogNSU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIEBlYWNoICRmcmFjdGlvbiBpbiAkZnJhY3Rpb25ze1xyXG4gICAgICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGZyYWN0aW9ue1xyXG4gICAgICAgICAgLnMtI3skaX0tI3skZnJhY3Rpb259LFxyXG4gICAgICAgICAgLiN7JGl0ZW19LnMtI3skaX0tI3skZnJhY3Rpb259IHtcclxuICAgICAgICAgICAgd2lkdGg6ICgxMDAlIC8gJGZyYWN0aW9uKSAqICRpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgIEBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6ICRzY3JlZW4tc2l6ZSl7XHJcbiAgICAgICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAyMCB7XHJcbiAgICAgICAgICAuI3skc2l6ZX0tI3skaSo1fSxcclxuICAgICAgICAgIC4jeyRpdGVtfS4jeyRzaXplfS0jeyRpKjV9e1xyXG4gICAgICAgICAgICB3aWR0aDogJGkgKiA1JTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgQGVhY2ggJGZyYWN0aW9uIGluICRmcmFjdGlvbnMge1xyXG4gICAgICAgICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkZnJhY3Rpb257XHJcbiAgICAgICAgICAgIC4jeyRzaXplfS0jeyRpfS0jeyRmcmFjdGlvbn0sXHJcbiAgICAgICAgICAgIC4jeyRpdGVtfS4jeyRzaXplfS0jeyRpfS0jeyRmcmFjdGlvbn0ge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAoMTAwJSAvICRmcmFjdGlvbikgKiAkaVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIlxuLy8gQ09MT1JFUyBNRU5VXG4kbWVudS1iZzogdHJhbnNwYXJlbnQ7XG4kbWVudS1iZy1ob3ZlcjogZGFya2VuKCRtZW51LWJnLDEwKTtcbiRtZW51LWNvbG9yLWE6ICRzZWNvbmQtY29sb3I7XG4kbWVudS1jb2xvci1hLWhvdmVyOiAkc2Vjb25kLWNvbG9yO1xuJG1lbnUtdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiRtZW51LWJvcmRlcjogbm9uZTtcbiRtZW51LWhlaWdodDogM3JlbTtcbiRoZWFkZXItd2lkdGg6IDE2MHB4O1xuJHZwOiBsO1xuLy8gVkFSSUFCTEVTIEVYVFJBU1xuJHRyYW5zaXRpb246IGFsbCAuM3M7XG4kZ3V0dGVyOiAxZW07XG4kYm9yZGVyLW1haW46IG5vbmU7XG4kYm9yZGVyOiAxcHggc29saWQgcmdiYSgjZmZmLC4xKTtcblxuLy8gRVNUSUxPUyBCQVNFXG4kYm9keS0tYmFja2dyb3VuZCAgOiAkYmctY29sb3I7ICAgICAgICAgICAgICAgICAgICAgIC8vIGZvbmRvIHBhcmEgZWwgYm9keVxuJGJvZHktLWZvbnQtZmFtaWx5IDogJG1haW4tZm9udDsgICAvLyBmdWVudGUgcHJlZGV0ZXJtaW5hZGFcbiRib2R5LS1jb2xvciAgICAgICA6ICRmb250cy1jb2xvcjsgICAgICAgICAgICAgICAgICAgICAgLy8gY29sb3IgZGUgdGV4dG8gcHJlZGV0ZXJtaW5hZG9cblxuLy8gRVNUSUxPUyBERSBFTkNBQkVaQURPU1xuJGhlYWRlci0tZm9udC1mYW1pbHkgICAgOiAkaGVhZGVyLWZvbnQ7ICAvLyBmdWVudGUgcGFyYSBsb3MgaGVhZGVycyAoaDEsaDIsaDMuLi4pXG4kaGVhZGVyLS1mb250LXdlaWdodCAgICA6ICRib2xkOyAgICAgICAgICAgICAgICAgICAgLy8gZ3Jvc29yIGRlIGZ1ZW50ZSBwYXJhIGxvcyBoZWFkZXJzXG4kaGVhZGVyLS10ZXh0LXRyYW5zZm9ybSA6IG5vcm1hbDsgICAgICAgICAgICAgICAgICAgLy8gbm9ybWFsLCB1cHBlcmNhc2UsIGxvd2VyY2FzZSwgY2FwaXRhbGl6ZVxuJGhlYWRlci0tY29sb3IgICAgICAgICAgOiAkaGVhZGVycy1jb2xvcjsgICAgICAgICAgICAgICAgICAgICAvLyBjb2xvciBwcmVkZXRlcm1pbmFkbyBkZSBsb3MgaGVhZGVyXG4kaGVhZGVyLS1iZy1jb2xvciAgICAgICA6ICRoZWFkZXItYmc7XG5cbi8vIFRBTUHDkU8gREUgTE9TIEVOQ0FCRVpBRE9TIChoMS4uLmg2KVxuJGgxLS1mb250LXNpemUgOiAyZW07XG4kaDItLWZvbnQtc2l6ZSA6IDEuNmVtO1xuJGgzLS1mb250LXNpemUgOiAxLjNlbTtcbiRoNC0tZm9udC1zaXplIDogMWVtO1xuJGg1LS1mb250LXNpemUgOiAuOWVtO1xuJGg2LS1mb250LXNpemUgOiAuOGVtO1xuXG4vLyBFU1RJSUxPUyBERSBFTkxBQ0VTXG4kbGluay0tY29sb3IgOiBpbml0aWFsOyAgLy8gY29sb3IgcGFyYSBsb3MgZW5sYWNlc1xuXG4vLyBFU1RJTE9TIERFIFDDgVJSQUZPU1xuJHAtLWZvbnQtc2l6ZSAgIDogMWVtOyAgICAgICAgLy8gVGFtYcOxbyBkZSBmdWVudGVcbiRwLS1saW5lLWhlaWdodCA6IDEuNTsgICAgICAgIC8vIEFsdHVyYSBkZSBsw61uZWFcbiRwLS1tYXJnaW4gICAgICA6IDFlbTsgICAgICAgIC8vIFNlcGFyYWNpw7NuIGVudHJlIHVuIHDDoXJyYWZvIHkgZWwgc2lndWllbnRlXG4kcC0tZm9udC13ZWlnaHQgOiAkbm9ybWFsOyAgICAvLyBHcm9zb3IgcHJlZGV0ZXJtaW5hZG8gZGUgbGEgZnVlbnRlXG4iLCIuZmFuY3lib3gtd3JhcHtcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gIHotaW5kZXg6IDExMDAgIWltcG9ydGFudDtcbiAgLy9iYWNrZ3JvdW5kOiByZWQgIWltcG9ydGFudDtcbn1cbi5mYW5jeWJveC1vdmVybGF5IHtcbiAgYmFja2dyb3VuZDogcmdiYSgjMDAwLC43NSk7XG4gIHotaW5kZXg6IDEwMDA7XG59XG4iLCIuc2xpZGVze1xuICBAaW5jbHVkZSBlZEl0ZW0oMTAwKTtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAvL3dpZHRoOiAxMDAlO1xuICB6LWluZGV4OiAxO1xuICAvL2JvcmRlci1yYWRpdXM6IDJlbTtcbiAgLy9ib3gtc2hhZG93OiAwIDAgMTBweCAgIzQ0NDtcbiAgYTpob3ZlcntcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbiAgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aCA6IDEwMCU7XG4gICAgaGVpZ2h0ICAgIDogYXV0bztcbiAgfVxufVxuLnNsaWRlc2pzLW5hdmlnYXRpb257XG4gICRzaXplOiA1MHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIGhlaWdodDogJHNpemU7XG4gIHdpZHRoOiAkc2l6ZTtcbiAgbGluZS1oZWlnaHQ6ICRzaXplO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6IHJnYmEoIzAwMCwuNSk7XG4gIC8vYm9yZGVyOiAxcHggc29saWQgJGRhcmstZ3JheTtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdGV4dC1zaGFkb3c6IHRleHQzZCgyLCRibGFjayk7XG4gIG9wYWNpdHk6IC41O1xuICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcbiAgei1pbmRleDogMjAwMDtcbiAgJjpob3ZlcntcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gICY6OmJlZm9yZXtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAzcHggIWltcG9ydGFudDtcbiAgfVxufVxuLnNsaWRlc2pzLXByZXZpb3Vze1xuICBsZWZ0OiAxZW07XG4gICY6OmJlZm9yZXtcbiAgICBsZWZ0OiAtM3B4O1xuICB9XG59XG4uc2xpZGVzanMtbmV4dHtcbiAgcmlnaHQ6IDFlbTtcbiAgJjo6YmVmb3Jle1xuICAgIGxlZnQ6IDJweDtcbiAgfVxufVxuLnNsaWRlc2pzLXBhZ2luYXRpb257XG4gIEBleHRlbmQgJWxpc3Qtc3R5bGU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTAwMDtcbiAgYm90dG9tOiAkZ3V0dGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICByaWdodDogJGd1dHRlcioyO1xuICBhe1xuICAgIG1hcmdpbjogMCAuNWVtO1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgIHRleHQtc2hhZG93OiB0ZXh0M2QoMSxyZ2JhKCMwMDAsLjUpKTtcbiAgICAmOjpiZWZvcmV7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB0b3A6IDAgIWltcG9ydGFudDtcbiAgICB9XG4gIH1cbiAgQGluY2x1ZGUgdG8obSl7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSguOCk7XG4gIH1cbn1cbiIsIkBmdW5jdGlvbiBlbSgkZWwsJHBhcmVudDoxNnB4KXtcclxuICBAcmV0dXJuICgkZWwgLyAkcGFyZW50KSAqIDFlbTtcclxufVxyXG5cclxuQGZ1bmN0aW9uIHJlbSgkZWwpe1xyXG4gIEByZXR1cm4gKCRlbCAvIDE2cHgpICogMXJlbTtcclxufVxyXG5AZnVuY3Rpb24gaW1nKCRpbWFnZSl7XHJcbiAgQHJldHVybiB1cmwoJy4uL2ltZy8nICsgJGltYWdlKTtcclxufVxyXG5cclxuQGZ1bmN0aW9uIHRleHQzZCgkbnVtZXJvLCRjb2xvcil7XHJcbiAgJHRleHQtc2hhZG93OiAycHggMnB4ICRjb2xvcjtcclxuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRudW1lcm8ge1xyXG4gICAgJHRleHQtc2hhZG93OiAnI3skdGV4dC1zaGFkb3d9LFxyXG4gICAgICAgICAjeyRpfXB4ICN7JGl9cHggI3skY29sb3J9JztcclxuICB9XHJcbiAgQHJldHVybiB1bnF1b3RlKCR0ZXh0LXNoYWRvdyk7XHJcbn1cclxuXHJcbkBmdW5jdGlvbiBib3gzZCgkbnVtZXJvLCRjb2xvcil7XHJcbiAgJGJveC1zaGFkb3c6IDJweCAycHggJGNvbG9yO1xyXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJG51bWVybyB7XHJcbiAgICAkYm94LXNoYWRvdzogJyN7JGJveC1zaGFkb3d9LFxyXG4gICAgICAgICAjeyRpfXB4ICN7JGl9cHggI3skY29sb3J9JztcclxuICB9XHJcbiAgQHJldHVybiB1bnF1b3RlKCRib3gtc2hhZG93KTtcclxufVxyXG5cclxuQGZ1bmN0aW9uIGJvcmRlcigkY29sb3IsJGFuY2hvKXtcclxuICBAcmV0dXJuICRhbmNobyBzb2xpZCAkY29sb3I7XHJcbn1cclxuQGZ1bmN0aW9uIHNoYWRvdygkdW5pdCwkY29sb3Ipe1xyXG4gIEByZXR1cm4gJHVuaXQgJHVuaXQgJHVuaXQgJGNvbG9yO1xyXG59XHJcbkBmdW5jdGlvbiBpbWcoJG5hbWUpe1xyXG4gIEByZXR1cm4gdXJsKC4uL2ltZy8jeyRuYW1lfSk7XHJcbn1cclxuQGZ1bmN0aW9uIGNvbG9yKCRuYW1lKXtcclxuICAkY29sb3I6IG1hcC1nZXQoJHNvY2lhbC1jb2xvcnMsJG5hbWUpO1xyXG4gIEByZXR1cm4gJGNvbG9yO1xyXG59XHJcbiIsIi8vIERldnVlbHZlIHRydWUgc2kgZWwgYnJlYWtwb2ludCBlcyBwYXJ0ZSBkZWwgY29yZVxyXG5AZnVuY3Rpb24gaXNDb3JlQnJlYWtwb2ludCgkYnApe1xyXG4gIEBpZiBtYXAtZ2V0KCRicmVha3BvaW50cywkYnApIHtcclxuICAgIEByZXR1cm4gdHJ1ZVxyXG4gIH0gQGVsc2Uge1xyXG4gICAgQHJldHVybiBmYWxzZVxyXG4gIH1cclxufVxyXG5cclxuLy8gRGV2dWVsdmUgdHJ1ZSBzaSBlbCBicmVha3BpbnQgZXMgdsOhbGlkbyAoZW0sIHJlbSwgcHgpXHJcbkBmdW5jdGlvbiBpc1ZhbGlkQnJlYWtwb2ludCgkYnApe1xyXG4gIEBpZiB0eXBlLW9mKCRicCkgPT0gbnVtYmVyIGFuZCAodW5pdCgkYnApID09ICdweCcgb3IgdW5pdCgkYnApID09ICdlbScgb3IgdW5pdCgkYnApID09ICdyZW0nKSB7XHJcbiAgICBAcmV0dXJuIHRydWVcclxuICB9IEBlbHNlIHtcclxuICAgIEByZXR1cm4gZmFsc2VcclxuICB9XHJcbn1cclxuXHJcbi8vIE9idGllbmUgdW4gYnJlYWtwb2ludCBkZWwgY29yZVxyXG5AZnVuY3Rpb24gZ2V0QnAoJGJwKXtcclxuICBAcmV0dXJuIG1hcC1nZXQoJGJyZWFrcG9pbnRzLCRicClcclxufVxyXG5cclxuLy8gQ29udmllcnRlIHVuIHZhbG9yIGVuIGVtIG8gcmVtIGEgcHhcclxuQGZ1bmN0aW9uIHRvUHgoJHZhbHVlKXtcclxuICBAaWYgdHlwZS1vZigkdmFsdWUpID09IG51bWJlciB7XHJcbiAgICBAaWYgdW5pdCgkdmFsdWUpID09ICdlbSd7XHJcbiAgICAgIEByZXR1cm4gKCR2YWx1ZSAvIDFlbSkgKiAxNnB4O1xyXG4gICAgfSBAZWxzZSBpZiB1bml0KCR2YWx1ZSkgPT0gJ3JlbSd7XHJcbiAgICAgIEByZXR1cm4gKCR2YWx1ZSAvIDFyZW0pICogMTZweFxyXG4gICAgfSBAZWxzZSBpZiB1bml0KCR2YWx1ZSkgPT0gJ3B4JyB7XHJcbiAgICAgIEByZXR1cm4gJHZhbHVlO1xyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgIEBlcnJvciBcIkxhIGZ1bmNpb24gdG9QeCgpIHNvbG8gYWNlcHRhIG51bWVyb3MgZW4gZW0gbyByZW0gbyBweFwiXHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAZXJyb3IgXCJMYSBmdW5jaW9uIHRvUHgoKSBzb2xvIGFjZXB0YSBudW1lcm9zIGVuIGVtIG8gcmVtXCJcclxuICB9XHJcbn1cclxuXHJcbi8vIEZyb20gKG1heW9yIHF1ZSAkYnApXHJcbkBtaXhpbiBmcm9tKCRmcm9tKXtcclxuICBAaWYgaXNDb3JlQnJlYWtwb2ludCgkZnJvbSl7XHJcbiAgICBAaWYgJGZyb20gPT0gcyB7XHJcbiAgICAgIEBjb250ZW50XHJcbiAgICB9XHJcbiAgICBAZWxzZSB7XHJcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGdldEJwKCRmcm9tKSl7IEBjb250ZW50IH1cclxuICAgIH1cclxuICB9IEBlbHNlIGlmIGlzVmFsaWRCcmVha3BvaW50KCRmcm9tKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRmcm9tKXsgQGNvbnRlbnQgfVxyXG4gIH0gQGVsc2Uge1xyXG4gICAgQGVycm9yICdFbCBtaXhpbiBmcm9tKCkgc29sbyBwdWVkZSByZWNpYmlyIHVuIGJyZWFrcG9pbnQgZGVsIENvcmUgKCN7bWFwLWtleXMoJGJyZWFrcG9pbnRzKX0pIG8gdW4gbsO6bWVybyBlbiBweCwgZW0gbyByZW0nXHJcbiAgfVxyXG59XHJcblxyXG4vLyBUbyAoZXMgbWVub3IgcXVlICR0bylcclxuQG1peGluIHRvKCR0byl7XHJcbiAgLy8gU2kgZXMgdW4gYnJlYWtwb2ludCBkZWwgY29yZVxyXG4gIEBpZiBpc0NvcmVCcmVha3BvaW50KCR0byl7XHJcbiAgICBAaWYgJHRvID09IHMge1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoIDogZ2V0QnAoJHRvKSAtIDFweCkgeyBAY29udGVudCB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8vIFNpIGVzIHVuIGJyZWFrcG9pbnQgdsOhbGlkbyAocHgsIGVtLCByZW0pXHJcbiAgQGVsc2UgaWYgaXNWYWxpZEJyZWFrcG9pbnQoJHRvKXtcclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IHRvUHgoJHRvKSAtIDFweCl7IEBjb250ZW50IH1cclxuICB9XHJcbiAgLy8gU2kgbm8gZXMgdW4gYnJlYWtwb2ludCB2w6FsaWRvIGxhbnphciBlcnJvclxyXG4gIEBlbHNlIHtcclxuICAgIEBlcnJvciAnRWwgbWl4aW4gdG8oKSBzb2xvIHB1ZWRlIHJlY2liaXIgdW4gYnJlYWtwb2ludCBkZWwgQ29yZSAoI3ttYXAta2V5cygkYnJlYWtwb2ludHMpfSkgbyB1biBuw7ptZXJvIGVuIHB4LCBlbSBvIHJlbSdcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBmcm9tVG8oJGZyb20sJHRvKXtcclxuICAvLyBTaSBhbWJvcyBzb24gYnJlYWtwb2ludHMgZGVsIGNvcmVcclxuICBAaWYgaXNDb3JlQnJlYWtwb2ludCgkZnJvbSkgYW5kIGlzQ29yZUJyZWFrcG9pbnQoJHRvKXtcclxuICAgIEBpZiBnZXRCcCgkdG8pID4gZ2V0QnAoJGZyb20pIHtcclxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aCA6IGdldEJwKCRmcm9tKSkgYW5kIChtYXgtd2lkdGggOiBnZXRCcCgkdG8pIC0gMXB4KSB7XHJcbiAgICAgICAgQGNvbnRlbnRcclxuICAgICAgfVxyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgIEBlcnJvciBcIkVsIHNlZ3VuZG8gYXJndW1lbnRvIGRlbCBtaXhpbiBmcm9tVG8gZGViZSBzZXIgbWF5b3IgcXVlIGVsIHByaW1lcm9cIlxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gU2kgc29sbyAkZnJvbSBlcyBicmVha3BvaW50IGRlbCBjb3JlXHJcbiAgQGVsc2UgaWYgaXNDb3JlQnJlYWtwb2ludCgkZnJvbSkgYW5kIG5vdCBpc0NvcmVCcmVha3BvaW50KCR0byl7XHJcbiAgICBAaWYgaXNWYWxpZEJyZWFrcG9pbnQoJHRvKSB7XHJcbiAgICAgIEBpZiB0b1B4KCR0bykgPiB0b1B4KGdldEJwKCRmcm9tKSkge1xyXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGggOiBnZXRCcCgkZnJvbSkpIGFuZCAobWF4LXdpZHRoIDogdG9QeCgkdG8pIC0gMXB4KSB7XHJcbiAgICAgICAgICBAY29udGVudFxyXG4gICAgICAgIH1cclxuICAgICAgfSBAZWxzZSB7XHJcbiAgICAgICAgQGVycm9yIFwiRWwgc2VndW5kbyBhcmd1bWVudG8gZGVsIG1peGluIGZyb21UbyBkZWJlIHNlciBtYXlvciBxdWUgZWwgcHJpbWVyb1wiXHJcbiAgICAgIH1cclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICBAZXJyb3IgXCJFbCBzZWd1bmRvIGFyZ3VtZW50byBkZWwgbWl4aW4gZnJvbVRvKCkgZGViZSBzZXIgdW4gYnJlYWtwb2ludCBkZWwgQ29yZSAoI3ttYXAta2V5cygkYnJlYWtwb2ludHMpfSkgbyB1biBuw7ptZXJvIGVuIHB4LCBlbSBvIHJlbVwiXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBTaSBzb2xvICR0byBlcyBicmVha3BvaW50IGRlbCBjb3JlXHJcbiAgQGVsc2UgaWYgbm90IGlzQ29yZUJyZWFrcG9pbnQoJGZyb20pIGFuZCBpc0NvcmVCcmVha3BvaW50KCR0bykge1xyXG4gICAgQGlmIGlzVmFsaWRCcmVha3BvaW50KCRmcm9tKSB7XHJcbiAgICAgIEBpZiB0b1B4KGdldEJwKCR0bykpID4gdG9QeCgkZnJvbSl7XHJcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aCA6ICRmcm9tKSBhbmQgKG1heC13aWR0aCA6IGdldEJwKCR0bykgLSAxcHgpIHtcclxuICAgICAgICAgIEBjb250ZW50XHJcbiAgICAgICAgfVxyXG4gICAgICB9IEBlbHNlIHtcclxuICAgICAgICBAZXJyb3IgXCJFbCBzZWd1bmRvIGFyZ3VtZW50byBkZWwgbWl4aW4gZnJvbVRvIGRlYmUgc2VyIG1heW9yIHF1ZSBlbCBwcmltZXJvXCJcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgQGVsc2Uge1xyXG4gICAgICBAZXJyb3IgXCJFbCBwcmltZXIgYXJndW1lbnRvIGRlbCBtaXhpbiBmcm9tVG8oKSBkZWJlIHNlciB1biBicmVha3BvaW50IGRlbCBDb3JlICgje21hcC1rZXlzKCRicmVha3BvaW50cyl9KSBvIHVuIG7Dum1lcm8gZW4gcHgsIGVtIG8gcmVtXCJcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIFNpIG5vIHNvbiBicmVha3BvaW50cyBkZWwgY29yZSBwZXJvIHNvbiBicmVha3BvaW50cyB2w6FsaWRvcyAocHgsIGVtLCByZW0pXHJcbiAgQGVsc2UgaWYgaXNWYWxpZEJyZWFrcG9pbnQoJGZyb20pIGFuZCBpc1ZhbGlkQnJlYWtwb2ludCgkdG8pe1xyXG4gICAgQGlmIHRvUHgoJHRvKSA+IHRvUHgoJGZyb20pIHtcclxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aCA6ICRmcm9tKSBhbmQgKG1heC13aWR0aCA6IHRvUHgoJHRvKSAtIDFweCkge1xyXG4gICAgICAgIEBjb250ZW50XHJcbiAgICAgIH1cclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICBAZXJyb3IgXCJFbCBzZWd1bmRvIGFyZ3VtZW50byBkZWwgbWl4aW4gZnJvbVRvIGRlYmUgc2VyIG1heW9yIHF1ZSBlbCBwcmltZXJvXCJcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIFNpIGFsIG1lbm9zIGhheSB1biBicmVha3BvaW50IGludsOhbGlkb1xyXG4gIEBlbHNlIHtcclxuICAgIEBlcnJvciAnTG9zIGFyZ3VtZW50b3MgZGVsIG1peGluIGZyb21UbygpIGRlYmVuIHNlciBicmVha3BvaW50cyBkZWwgQ29yZSAoI3ttYXAta2V5cygkYnJlYWtwb2ludHMpfSkgbyBuw7ptZXJvcyBlbiBweCwgZW0gbyByZW0nO1xyXG4gIH1cclxufVxyXG4iLCIvL01vZGlmaXF1ZSBsb3MgZXN0aWxvcyBiYXNlIGRlc2RlIGxhcyB2YXJpYWJsZXNcblxuYm9keSB7XG4gIGJhY2tncm91bmQgIDogJGJvZHktLWJhY2tncm91bmQ7XG4gIGZvbnQtZmFtaWx5IDogJGJvZHktLWZvbnQtZmFtaWx5O1xuICBjb2xvciAgICAgICA6ICRib2R5LS1jb2xvcjtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxufVxuXG5hIHtcbiAgY29sb3IgICAgICAgICAgIDogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uIDogbm9uZTtcbn1cblxucCwgYmxvY2txdW90ZSwgbGkge1xuICBmb250LXNpemUgICA6ICRwLS1mb250LXNpemU7XG4gIGxpbmUtaGVpZ2h0IDogJHAtLWxpbmUtaGVpZ2h0O1xufVxuXG5wIHtcbiAgbWFyZ2luIDogMCAwICRwLS1tYXJnaW4gMDtcblxuICAmOmxhc3QtY2hpbGQsXG4gICY6b25seS1jaGlsZCB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG5cbmJsb2NrcXVvdGUge1xuXG59XG5cbi8vIEVzdGlsb3MgYsOhc2ljb3MgZGUgbG9zIGVuY2FiZXphZG9zXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgZm9udC1mYW1pbHkgICAgOiAkaGVhZGVyLS1mb250LWZhbWlseTtcbiAgZm9udC13ZWlnaHQgICAgOiAkaGVhZGVyLS1mb250LXdlaWdodDtcbiAgdGV4dC10cmFuc2Zvcm0gOiAkaGVhZGVyLS10ZXh0LXRyYW5zZm9ybTtcbiAgY29sb3IgICAgICAgICAgOiAkaGVhZGVyLS1jb2xvcjtcbiAgYmFja2dyb3VuZCAgICAgOiAkaGVhZGVyLS1iZy1jb2xvciAgO1xuICBtYXJnaW4gICAgICAgICA6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLy8gVGFtYcOxb3MgeSBlc3RpbG9zIGRlIGxvcyBlbmNhYmV6YWRvczpcbmgxIHtcbiAgZm9udC1zaXplIDogJGgxLS1mb250LXNpemU7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG59XG5cbmgyIHtcbiAgZm9udC1zaXplIDogJGgyLS1mb250LXNpemU7XG59XG5cbmgzIHtcbiAgZm9udC1zaXplIDogJGgzLS1mb250LXNpemU7XG59XG5cbmg0IHtcbiAgZm9udC1zaXplIDogJGg0LS1mb250LXNpemU7XG59XG5cbmg1IHtcbiAgZm9udC1zaXplIDogJGg1LS1mb250LXNpemU7XG59XG5cbmg2IHtcbiAgZm9udC1zaXplIDogJGg2LS1mb250LXNpemU7XG59XG5zZWN0aW9ue1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IC0xO1xuICBAaW5jbHVkZSB0bygkdnApe1xuICAgIGxlZnQ6ICRoZWFkZXItd2lkdGg7XG4gIH1cbiAgQGluY2x1ZGUgZnJvbSgkdnApe1xuICAgIHBhZGRpbmctbGVmdDogJGhlYWRlci13aWR0aDtcbiAgfVxufVxuLy9pbWd7XG4vLyAgZGlzcGxheTogYmxvY2s7XG4vL31cbiIsIiRibHVlICAgICAgICA6IHN0ZWVsYmx1ZTtcbiRkYXJrLWJsdWUgICA6IGRhcmtlbigkYmx1ZSwxNSUpO1xuJGxpZ2h0LWJsdWUgIDogbGlnaHRlbigkYmx1ZSwyNSUpO1xuJGJsYWNrICAgICAgIDogIzA3MEQxMjtcbiR3aGl0ZSAgICAgICA6ICNGREZERkQ7XG4kZ3JheSAgICAgICAgOiAjMUMyNjJCO1xuJGRhcmstZ3JheSAgIDogIzQ0NDtcbiRsaWdodC1ncmF5ICA6ICMxQzI2MkI7XG4kcmVkICAgICAgICAgOiBkYXJrZW4odG9tYXRvLDEwKTtcbiRkYXJrLXJlZCAgICA6IGRhcmtlbihyZWQsMjApO1xuJGxpZ2h0LXJlZCAgIDogbGlnaHRlbihyZWQsMjUpO1xuJGdyZWVuICAgICAgIDogIzJCQTE2MztcbiRkYXJrLWdyZWVuICA6IGRhcmtlbigkZ3JlZW4sMTApO1xuJGxpZ2h0LWdyZWVuIDogbGlnaHRlbigkZ3JlZW4sMjApO1xuJG9yYW5nZSAgICAgIDogI0VBNEUyRTtcbiRkYXJrLW9yYW5nZSA6IGRhcmtlbigkb3JhbmdlLDEwKTtcbiRsaWdodC1vcmFuZ2U6IGxpZ2h0ZW4oJG9yYW5nZSwxMCk7XG5cbiRzb2NpYWwtY29sb3JzOihcbiAgZmFjZWJvb2sgICAgOiAjM2I1OTk4LFxuICB0d2l0dGVyICAgICA6ICM1NWFjZWUsXG4gIGdvb2dsZXBsdXMgIDogI2RkNGIzOSxcbiAgeW91dHViZSAgICAgOiAjYmIwMDAwLFxuICBsaW5rZWRpbiAgICA6ICMwMDdiYjUsXG4gIGluc3RhZ3JhbSAgIDogI2U5NTk1MCxcbiAgd2hhdHNhcHAgICAgOiAjNGRjMjQ3LFxuICBwaW50ZXJlc3QgICA6ICNjYjIwMjcsXG4gIHZpbmUgICAgICAgIDogIzAwYmY4ZixcbiAgc25hcGNoYXQgICAgOiAjZmZmYzAwLFxuICBzaWdtYXBjcyAgICA6ICMwMDg1Q0Ncbik7XG5cblxuJHNpZ21hLWNvbG9yOiAjMDA5MWVhOyAvL2hzbCgyMDEsNTAsNDApO1xuJG1haW4tY29sb3I6ICRkYXJrLWJsdWU7XG4kc2Vjb25kLWNvbG9yOiAkd2hpdGU7XG4kZm9udHMtY29sb3I6ICRkYXJrLWdyYXk7XG4kaGVhZGVycy1jb2xvcjogZGFya2VuKCRmb250cy1jb2xvciwxMCk7XG4kaGVhZGVyLWJnOiAkc2Vjb25kLWNvbG9yO1xuJGJnLWNvbG9yOiAkc2Vjb25kLWNvbG9yO1xuIiwiJGNvbG9yLWhlYWRlcjogcmdiYSgkd2hpdGUsLjQpO1xuLm1haW4taGVhZGVye1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogJGhlYWRlci13aWR0aDtcbiAgYmFja2dyb3VuZDogJGdyYXk7XG4gIGhlaWdodDogMTAwdmg7XG4gIC8vd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMjAwO1xufVxuLnRvcHtcbiAgaGVpZ2h0OiAkaGVhZGVyLXdpZHRoO1xuICAvL3Bvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KFxuICAgICAgICAgICAgIzc3NyAyMCUsXG4gICAgICAgICAgICAjMjIyXG4gICk7XG4gICZfX2xvZ297XG5cbiAgfVxuICAmX190aXRsZXtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYmFja2dyb3VuZDogJGdyZWVuO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgaGVpZ2h0OiAyZW07XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBjb2xvcjogcmdiYSgkd2hpdGUsLjgpO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgQGluY2x1ZGUgdG8oJHZwKXtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwdnc7XG4gICAgICBoZWlnaHQ6IDNlbTtcbiAgICAgIGJhY2tncm91bmQ6ICRibGFjaztcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKCR3aGl0ZSwuMyk7XG4gICAgICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcbiAgICAgICYuYWN0aXZle1xuICAgICAgICBsZWZ0OiAkaGVhZGVyLXdpZHRoO1xuICAgICAgfVxuICAgIH1cbiAgICBAaW5jbHVkZSBmcm9tKCR2cCl7XG4gICAgICB0b3A6IGNhbGMoMTUwcHggLSAxZW0pO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHdpZHRoOiAkaGVhZGVyLXdpZHRoO1xuICAgICAgei1pbmRleDogMjUwO1xuICAgIH1cbiAgICBoMXtcbiAgICAgIGZvbnQtc2l6ZTogLjhlbTtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICBAaW5jbHVkZSB0bygkdnApe1xuICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAkZ3V0dGVyO1xuICAgICAgfVxuICAgICAgQGluY2x1ZGUgZnJvbSgkdnApe1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB9XG4gICAgfVxuICAgIGF7XG4gICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYmEoJHdoaXRlLC4zKTtcbiAgICAgIGhlaWdodDogM3JlbTtcbiAgICAgIHdpZHRoOiAzLjVyZW07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZm9udC1zaXplOiAxLjNlbTtcblxuICAgICAgQGluY2x1ZGUgZnJvbSgkdnApe1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgICAgJjo6YmVmb3Jle1xuICAgICAgICB0b3A6IDFweDtcbiAgICAgIH1cblxuICAgIH1cbiAgfVxufVxuLm1haW4tbmF2e1xuICBmbGV4OiAyO1xuXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChsYW5kc2NhcGUpIGFuZCAobWF4LWhlaWdodDogcyl7XG4gICAgZmxleDogMTtcbiAgfVxufVxuLm1haW4tbWVudXtcbiAgQGV4dGVuZCAlbGlzdC1zdHlsZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbGl7XG4gICAgZmxleDogMjtcbiAgICBoZWlnaHQ6IDg1cHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoJHdoaXRlLC4xKTtcbiAgICBAaW5jbHVkZSB0bygkdnApe1xuICAgICAgaGVpZ2h0OiA3MHB4O1xuICAgIH1cbiAgfVxuICBhe1xuICAgIGNvbG9yOiAkY29sb3ItaGVhZGVyO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBmb250LXNpemU6IC43ZW07XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcbiAgICAmOmhvdmVyLCYuc2VsZWN0ZWR7XG4gICAgICBjb2xvcjogcmdiYSgkd2hpdGUsLjgpO1xuICAgIH1cbiAgfVxuICBzcGFue1xuICAgIGZvbnQtc2l6ZTogMmVtO1xuICB9XG59XG4uYm90dG9te1xuICBtYXJnaW4tYm90dG9tOiAuNWVtO1xuICBwe1xuICAgIGNvbG9yOiAkY29sb3ItaGVhZGVyO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IC43ZW07XG4gIH1cbiAgc3BhbiB7XG4gICAgbWFyZ2luLWxlZnQ6IDNweDtcbiAgfVxufVxuIiwiLmhvbWV7XG4gIGhlaWdodDogMTAwdmg7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiBpbWcoJ2JnLmpwZycpIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAmOjphZnRlcntcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoIzY2NiwuNSk7XG4gIH1cbn1cbiIsIltjbGFzc149XCJpY29uLVwiXTo6YmVmb3Jle1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogM3B4O1xufVxuYm9keXtcbiAgLy9vdmVyZmxvdzogaGlkZGVuO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBAaW5jbHVkZSB0bygkdnApe1xuICAgIGxlZnQ6ICRoZWFkZXItd2lkdGgqLTE7XG4gICAgdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XG4gIH1cbiAgJi5hY3RpdmV7XG4gICAgbGVmdDogMDtcbiAgfVxufVxuIl19 */
